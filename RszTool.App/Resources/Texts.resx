<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SaveAs" xml:space="preserve">
    <value>Save as</value>
  </data>
  <data name="Reopen" xml:space="preserve">
    <value>Reopen</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Quit" xml:space="preserve">
    <value>Quit</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="NewItem" xml:space="preserve">
    <value>New item</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Duplicate" xml:space="preserve">
    <value>Duplicate</value>
  </data>
  <data name="DuplicateMulti" xml:space="preserve">
    <value>Duplicate many times</value>
  </data>
  <data name="PasteAfter" xml:space="preserve">
    <value>Paste after</value>
  </data>
  <data name="PasteGameobject" xml:space="preserve">
    <value>Paste Gameobject</value>
  </data>
  <data name="PasteGameobjectAsChild" xml:space="preserve">
    <value>Paste Gameobject as child</value>
  </data>
  <data name="UsageHint" xml:space="preserve">
    <value>Open a file from the file menu or drag it in .
Currently, user, scn, pfb files are supported</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="InputDulicateCount" xml:space="preserve">
    <value>Please input duplicate count</value>
  </data>
  <data name="InputClassName" xml:space="preserve">
    <value>Please input class name</value>
  </data>
  <data name="RszJsonNotFound" xml:space="preserve">
    <value>{0} not found, please copy it from RE_RSZ manually</value>
  </data>
  <data name="NotSupportedFormat" xml:space="preserve">
    <value>Not supported file format</value>
  </data>
  <data name="FindInstances" xml:space="preserve">
    <value>Find instances</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="FieldName" xml:space="preserve">
    <value>Field name</value>
  </data>
  <data name="FieldValue" xml:space="preserve">
    <value>Field value</value>
  </data>
  <data name="MatchCase" xml:space="preserve">
    <value>Match Case</value>
  </data>
  <data name="MatchWholeWord" xml:space="preserve">
    <value>Match Whole Word</value>
  </data>
  <data name="UseRegex" xml:space="preserve">
    <value>Use Regular Expression</value>
  </data>
  <data name="FindGameObjects" xml:space="preserve">
    <value>Find GameObjects</value>
  </data>
  <data name="IncludeChildren" xml:space="preserve">
    <value>Include Children</value>
  </data>
  <data name="GameObjectName" xml:space="preserve">
    <value>GameObject Name</value>
  </data>
  <data name="Component" xml:space="preserve">
    <value>Component</value>
  </data>
  <data name="Tag" xml:space="preserve">
    <value>Tag</value>
  </data>
  <data name="FileChangedPrompt" xml:space="preserve">
    <value>File is changed, do you want to save it?</value>
  </data>
  <data name="FileNotExists" xml:space="preserve">
    <value>File not exists</value>
  </data>
  <data name="OpenRecentFiles" xml:space="preserve">
    <value>Open recent files</value>
  </data>
  <data name="ClearRecentFilesHistory" xml:space="preserve">
    <value>Clear recent files history</value>
  </data>
  <data name="RemoveNonExistedRecentFilesHistory" xml:space="preserve">
    <value>Remove non-existed recent files history</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AboutProjectDetail" xml:space="preserve">
    <value>RszTool is a tool that edit and create resource file for RE ENGINE game. Currently support .user, .pfb and .scn files.</value>
  </data>
  <data name="ProjectRepo" xml:space="preserve">
    <value>Project repo</value>
  </data>
  <data name="Paste" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="RszClassMismatch" xml:space="preserve">
    <value>Class mismatch, copied type is {0}, target type is {1}.</value>
  </data>
  <data name="RszClassMismatchConfirm" xml:space="preserve">
    <value>Class mismatch, copied type is {0}, target type is {1}. Continue?</value>
  </data>
  <data name="AddComponent" xml:space="preserve">
    <value>Add component</value>
  </data>
  <data name="AddFolder" xml:space="preserve">
    <value>Add folder</value>
  </data>
  <data name="InputFolderName" xml:space="preserve">
    <value>Input folder name</value>
  </data>
  <data name="PasteInstanceAsComponent" xml:space="preserve">
    <value>Paste instance as component</value>
  </data>
  <data name="ReadFailed" xml:space="preserve">
    <value>Read failed</value>
  </data>
  <data name="TryReopen" xml:space="preserve">
    <value>Will try reopen, because {0}, better reopen other opened file manually.</value>
  </data>
  <data name="UpdateContextID" xml:space="preserve">
    <value>Update ContextID</value>
  </data>
  <data name="Dark" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="RefreshFileExplorer" xml:space="preserve">
    <value>Refresh file explorer</value>
  </data>
  <data name="OpenInExplorer" xml:space="preserve">
    <value>Open in explorer</value>
  </data>
  <data name="ContextIDIndexIncrementOffset" xml:space="preserve">
    <value>ContextID Index Increment Offset</value>
  </data>
  <data name="Preference" xml:space="preserve">
    <value>Preference</value>
  </data>
  <data name="ApplyOffset" xml:space="preserve">
    <value>Apply offset</value>
  </data>
  <data name="ParseTransformClipboard" xml:space="preserve">
    <value>Parse Transform From Clipboard</value>
  </data>
  <data name="ParseTransformClipboardHint" xml:space="preserve">
    <value>Failed to parse transform, data should be
1. for DebugInfo
{"pos": [x, y, z], "rot": [x, y, z, w]}
2. for Emv Engine, pos and rot
vec:x y z
vec:x y z w</value>
  </data>
  <data name="ChangeLogContent" xml:space="preserve">
    <value>ChangeLog for RszTool

2023/06/25 0.3.2
1. Optimize the performance of opening files with a large number of items, and improve items rendering.
2. Utilize AvalonDock to support more advanced layouts, support reopening files that were not closed last time, and support layout recording.
3. A warning will pop up when the writing of Rsz data fails.
4. The ContextID correction window supports manual input of offset and batch updating of Index.
5. Support parsing the current player's position and rotation copied from DebugInfo (copied in the Script Generated UI).
6. Support parsing the position and rotation copied from the Emv Engine,
   by clicking the "+" to the left of the vector field corresponding to the Emv Engine,
   and copying data starting with "vec:",
   where 3 values are considered as the position x, y, z,
   and 4 values are considered as the rotation x, y, z, w.

2023/04/12 0.3.0
1. Add DarkTheme
2. Fix Quaternion edit
3. Fix Folder parent assign
4. Add file explorer
5. ScnFile support AddFolder
6. ResourceInfos will be rebulid when instance path field changed
7. Support edit resource path manually
8. Dragons Dogma 2 support

2024/01/09 0.2.3
1. The search bar directly performs a search when the Enter key is pressed in the input box.
2. Fix the bug in the judgment when removing components in Pfb.
3. Fix the issue where the resource loading list is not updated after modifying the resource path field under certain circumstances.

2023/12/23 0.2.2
1. Enable paste pfb and scn game object to each other
2. RE4 enable combobox select enum value for field
3. RE4 update ContextID after paste game object and instance

2023/12/13 0.2.1
1. Pfb game object support copy/paste
2. Add self check on field detected as Object type which original type is "Data"
3. Fix repeated NULL in dmc5 which will let 010 Editor throws an error
4. Fix pfb reopen bug
5. Fix recent files menu display
6. Fix RszInstance.RSZUserData.InstanceId when rebulid info
7. Scn object and instance index is more like origin when rebulid info
8. Check resource path when rebulid info

2023/12/12 0.2.0
1. Enable remove game object component
2. Support Int2, Int3, Int4, Uint2, Uint3, Uint4 typpe

2023/12/11 0.1.9
1. Enable instance and field copy and paste
2. Enable GameObject add component
3. Fix UserFile resourceInfo read

2023/12/10 0.1.8
1. Fix search instances by value
2. CheckBox will set file changed status
3. Normal field array support Duplicate/Remove
4. Auto fix ObjectRef to new guid when copy GameObject
5. Refreash view after Reopen

2023/12/09 0.1.7
1. Fix dmc5 read
2. Fix Add array item

2023/12/09 0.1.6
1. Show external Instance UserData path
2. Show GameObjectInfo Guid
3. Add recent files history
4. Some command will set file changed state</value>
  </data>
  <data name="ChangeLog" xml:space="preserve">
    <value>Change Log</value>
  </data>
</root>